!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
Action	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-test-0.4.2/src/io.rs	/^enum Action {$/;"	g
AsDynError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/thiserror-1.0.30/src/aserror.rs	/^pub trait AsDynError<'a> {$/;"	t
Builder	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-test-0.4.2/src/io.rs	/^pub struct Builder {$/;"	s
Config	/home/trey/code/sqlx-crud/sqlx-crud-macros/src/lib.rs	/^struct Config<'a> {$/;"	s
Crud	/home/trey/code/sqlx-crud/src/traits.rs	/^pub trait Crud<'e, E>$/;"	t
CrudFut	/home/trey/code/sqlx-crud/src/traits.rs	/^pub type CrudFut<'e, T> = Pin<Box<dyn Future<Output = Result<T, sqlx::Error>> + 'e>>;$/;"	T
CrudStream	/home/trey/code/sqlx-crud/src/traits.rs	/^pub type CrudStream<'e, T> =$/;"	T
DbType	/home/trey/code/sqlx-crud/sqlx-crud-macros/src/lib.rs	/^enum DbType {$/;"	g
DisplayAsDisplay	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/thiserror-1.0.30/src/display.rs	/^pub trait DisplayAsDisplay {$/;"	t
Handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-test-0.4.2/src/io.rs	/^pub struct Handle {$/;"	s
IDLE	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-test-0.4.2/src/task.rs	/^const IDLE: usize = 0;$/;"	c
Id	/home/trey/code/sqlx-crud/sqlx-crud-macros/src/lib.rs	/^            type Id = #id_ty;$/;"	T
Id	/home/trey/code/sqlx-crud/src/traits.rs	/^    type Id: Send;$/;"	T
Inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-test-0.4.2/src/io.rs	/^struct Inner {$/;"	s
Item	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-test-0.4.2/src/task.rs	/^    type Item = T::Item;$/;"	T
MatchBorrow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.5.11/src/ty_match.rs	/^pub struct MatchBorrow<T, U>(PhantomData<T>, PhantomData<U>);$/;"	s
MatchBorrowExt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.5.11/src/ty_match.rs	/^pub trait MatchBorrowExt: Sized {$/;"	t
Matched	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.5.11/src/ty_match.rs	/^    type Matched = &'a [u8];$/;"	T
Matched	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.5.11/src/ty_match.rs	/^    type Matched = &'a str;$/;"	T
Matched	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.5.11/src/ty_match.rs	/^    type Matched = Option<&'a [u8]>;$/;"	T
Matched	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.5.11/src/ty_match.rs	/^    type Matched = Option<&'a str>;$/;"	T
Matched	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.5.11/src/ty_match.rs	/^    type Matched = Option<T>;$/;"	T
Matched	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.5.11/src/ty_match.rs	/^    type Matched = T;$/;"	T
Matched	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.5.11/src/ty_match.rs	/^    type Matched = U;$/;"	T
Matched	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.5.11/src/ty_match.rs	/^    type Matched;$/;"	T
Metadata	/home/trey/code/sqlx-crud/src/schema.rs	/^pub struct Metadata<'s, const C: usize> {$/;"	s
Mock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-test-0.4.2/src/io.rs	/^pub struct Mock {$/;"	s
MockTask	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-test-0.4.2/src/task.rs	/^struct MockTask {$/;"	s
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-test-0.4.2/src/task.rs	/^    type Output = T::Output;$/;"	T
PathAsDisplay	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/thiserror-1.0.30/src/display.rs	/^pub trait PathAsDisplay {$/;"	t
SLEEP	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-test-0.4.2/src/task.rs	/^const SLEEP: usize = 2;$/;"	c
Schema	/home/trey/code/sqlx-crud/src/traits.rs	/^pub trait Schema {$/;"	t
Spawn	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-test-0.4.2/src/task.rs	/^pub struct Spawn<T> {$/;"	s
Target	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-test-0.4.2/src/task.rs	/^    type Target = T;$/;"	T
ThreadWaker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-test-0.4.2/src/task.rs	/^struct ThreadWaker {$/;"	s
TryCollectFut	/home/trey/code/sqlx-crud/src/traits.rs	/^pub type TryCollectFut<'e, T> = TryCollect<CrudStream<'e, T>, Vec<T>>;$/;"	T
User	/home/trey/code/sqlx-crud/src/doctest.rs	/^pub struct User {$/;"	s
VTABLE	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-test-0.4.2/src/task.rs	/^static VTABLE: RawWakerVTable = RawWakerVTable::new(clone, wake, wake_by_ref, drop_waker);$/;"	c
WAKE	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-test-0.4.2/src/task.rs	/^const WAKE: usize = 1;$/;"	c
WrapSame	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.5.11/src/ty_match.rs	/^pub struct WrapSame<T, U>(PhantomData<T>, PhantomData<U>);$/;"	s
WrapSameExt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.5.11/src/ty_match.rs	/^pub trait WrapSameExt: Sized {$/;"	t
Wrapped	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.5.11/src/ty_match.rs	/^    type Wrapped = Option<T>;$/;"	T
Wrapped	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.5.11/src/ty_match.rs	/^    type Wrapped = T;$/;"	T
Wrapped	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.5.11/src/ty_match.rs	/^    type Wrapped;$/;"	T
_rename	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.5.11/src/lib.rs	/^pub fn _rename() {}$/;"	f
action	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-test-0.4.2/src/io.rs	/^    fn action(&mut self) -> Option<&mut Action> {$/;"	f
all	/home/trey/code/sqlx-crud/src/traits.rs	/^    fn all(pool: E) -> TryCollectFut<'e, Self> {$/;"	f
as_display	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/thiserror-1.0.30/src/display.rs	/^    fn as_display(&self) -> Self {$/;"	f
as_display	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/thiserror-1.0.30/src/display.rs	/^    fn as_display(&self) -> Self;$/;"	f
as_display	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/thiserror-1.0.30/src/display.rs	/^    fn as_display(&self) -> path::Display<'_> {$/;"	f
as_display	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/thiserror-1.0.30/src/display.rs	/^    fn as_display(&self) -> path::Display<'_>;$/;"	f
as_dyn_error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/thiserror-1.0.30/src/aserror.rs	/^    fn as_dyn_error(&self) -> &(dyn Error + 'a) {$/;"	f
as_dyn_error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/thiserror-1.0.30/src/aserror.rs	/^    fn as_dyn_error(&self) -> &(dyn Error + 'a);$/;"	f
assert_elapsed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-test-0.4.2/src/macros.rs	/^macro_rules! assert_elapsed {$/;"	d
assert_err	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-test-0.4.2/src/macros.rs	/^macro_rules! assert_err {$/;"	d
assert_ok	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-test-0.4.2/src/macros.rs	/^macro_rules! assert_ok {$/;"	d
assert_pending	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-test-0.4.2/src/macros.rs	/^macro_rules! assert_pending {$/;"	d
assert_ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-test-0.4.2/src/macros.rs	/^macro_rules! assert_ready {$/;"	d
assert_ready_eq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-test-0.4.2/src/macros.rs	/^macro_rules! assert_ready_eq {$/;"	d
assert_ready_err	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-test-0.4.2/src/macros.rs	/^macro_rules! assert_ready_err {$/;"	d
assert_ready_ok	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-test-0.4.2/src/macros.rs	/^macro_rules! assert_ready_ok {$/;"	d
block_on	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-test-0.4.2/src/lib.rs	/^pub fn block_on<F: std::future::Future>(future: F) -> F::Output {$/;"	f
build	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-test-0.4.2/src/io.rs	/^    pub fn build(&mut self) -> Mock {$/;"	f
build_sql_queries	/home/trey/code/sqlx-crud/sqlx-crud-macros/src/lib.rs	/^fn build_sql_queries(config: &Config) -> TokenStream2 {$/;"	f
build_sqlx_crud_impl	/home/trey/code/sqlx-crud/sqlx-crud-macros/src/lib.rs	/^fn build_sqlx_crud_impl(config: &Config) -> TokenStream2 {$/;"	f
build_static_model_schema	/home/trey/code/sqlx-crud/sqlx-crud-macros/src/lib.rs	/^fn build_static_model_schema(config: &Config) -> TokenStream2 {$/;"	f
build_with_handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-test-0.4.2/src/io.rs	/^    pub fn build_with_handle(&mut self) -> (Mock, Handle) {$/;"	f
by_id	/home/trey/code/sqlx-crud/src/traits.rs	/^    fn by_id(pool: E, id: <Self as Schema>::Id) -> CrudFut<'e, Option<Self>> {$/;"	f
clear	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-test-0.4.2/src/task.rs	/^    fn clear(&self) {$/;"	f
clone	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-test-0.4.2/src/task.rs	/^unsafe fn clone(raw: *const ()) -> RawWaker {$/;"	f
columns	/home/trey/code/sqlx-crud/sqlx-crud-macros/src/lib.rs	/^            fn columns() -> &'static [&'static str] {$/;"	f
columns	/home/trey/code/sqlx-crud/src/traits.rs	/^    fn columns() -> &'static [&'static str];$/;"	f
compat	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs	/^pub mod compat {$/;"	m
conjure_value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.5.11/src/ty_match.rs	/^pub fn conjure_value<T>() -> T {$/;"	f
create	/home/trey/code/sqlx-crud/src/traits.rs	/^    fn create(&'e self, pool: E) -> CrudFut<'e, Self> {$/;"	f
decode	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.5.11/src/lib.rs	/^pub mod decode {$/;"	m
default	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-test-0.4.2/src/task.rs	/^    fn default() -> Self {$/;"	f
delete	/home/trey/code/sqlx-crud/src/traits.rs	/^    fn delete(self, pool: E) -> CrudFut<'e, ()> {$/;"	f
delete_by_id_sql	/home/trey/code/sqlx-crud/sqlx-crud-macros/src/lib.rs	/^            fn delete_by_id_sql() -> &'static str {$/;"	f
delete_by_id_sql	/home/trey/code/sqlx-crud/src/traits.rs	/^    fn delete_by_id_sql() -> &'static str;$/;"	f
deref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-test-0.4.2/src/task.rs	/^    fn deref(&self) -> &T {$/;"	f
deref_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-test-0.4.2/src/task.rs	/^    fn deref_mut(&mut self) -> &mut T {$/;"	f
derive	/home/trey/code/sqlx-crud/sqlx-crud-macros/src/lib.rs	/^pub fn derive(input: TokenStream) -> TokenStream {$/;"	f
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-test-0.4.2/src/io.rs	/^    fn drop(&mut self) {$/;"	f
drop_waker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-test-0.4.2/src/task.rs	/^unsafe fn drop_waker(raw: *const ()) {$/;"	f
dupe_value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.5.11/src/ty_match.rs	/^pub fn dupe_value<T>(_t: &T) -> T {$/;"	f
encode	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.5.11/src/lib.rs	/^pub mod encode {$/;"	m
enter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-test-0.4.2/src/task.rs	/^    fn enter<F, R>(&mut self, f: F) -> R$/;"	f
enter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-test-0.4.2/src/task.rs	/^    pub fn enter<F, R>(&mut self, f: F) -> R$/;"	f
executor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs	/^pub mod executor {$/;"	m
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-test-0.4.2/src/io.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	f
from	/home/trey/code/sqlx-crud/sqlx-crud-macros/src/lib.rs	/^    fn from(db_type: &str) -> Self {$/;"	f
from_raw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-test-0.4.2/src/task.rs	/^unsafe fn from_raw(raw: *const ()) -> Arc<ThreadWaker> {$/;"	f
id	/home/trey/code/sqlx-crud/sqlx-crud-macros/src/lib.rs	/^            fn id(&self) -> Self::Id {$/;"	f
id	/home/trey/code/sqlx-crud/src/traits.rs	/^    fn id(&self) -> Self::Id;$/;"	f
id_column	/home/trey/code/sqlx-crud/sqlx-crud-macros/src/lib.rs	/^            fn id_column() -> &'static str {$/;"	f
id_column	/home/trey/code/sqlx-crud/src/traits.rs	/^    fn id_column() -> &'static str;$/;"	f
insert_binds	/home/trey/code/sqlx-crud/sqlx-crud-macros/src/lib.rs	/^            fn insert_binds($/;"	f
insert_binds	/home/trey/code/sqlx-crud/src/traits.rs	/^    fn insert_binds($/;"	f
insert_sql	/home/trey/code/sqlx-crud/sqlx-crud-macros/src/lib.rs	/^            fn insert_sql() -> &'static str {$/;"	f
insert_sql	/home/trey/code/sqlx-crud/src/traits.rs	/^    fn insert_sql() -> &'static str;$/;"	f
into_inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-test-0.4.2/src/task.rs	/^    pub fn into_inner(self) -> T$/;"	f
is_task_ctx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-test-0.4.2/src/io.rs	/^fn is_task_ctx() -> bool {$/;"	f
is_woken	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-test-0.4.2/src/task.rs	/^    fn is_woken(&self) -> bool {$/;"	f
is_woken	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-test-0.4.2/src/task.rs	/^    pub fn is_woken(&self) -> bool {$/;"	f
match_borrow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.5.11/src/ty_match.rs	/^    fn match_borrow(self) -> Self::Matched {$/;"	f
maybe_wakeup_reader	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-test-0.4.2/src/io.rs	/^    fn maybe_wakeup_reader(&mut self) {$/;"	f
migrate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.5.11/src/macros.rs	/^macro_rules! migrate {$/;"	d
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.5.11/src/ty_match.rs	/^    pub fn new(_arg: &U) -> Self {$/;"	f
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.5.11/src/ty_match.rs	/^    pub fn new(t: T, _u: &U) -> (T, Self) {$/;"	f
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-test-0.4.2/src/io.rs	/^    fn new(actions: VecDeque<Action>) -> (Inner, Handle) {$/;"	f
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-test-0.4.2/src/io.rs	/^    pub fn new() -> Self {$/;"	f
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-test-0.4.2/src/task.rs	/^    fn new() -> Self {$/;"	f
new	/home/trey/code/sqlx-crud/sqlx-crud-macros/src/lib.rs	/^    fn new(attrs: &[Attribute]) -> Self {$/;"	f
new	/home/trey/code/sqlx-crud/sqlx-crud-macros/src/lib.rs	/^    fn new(attrs: &[Attribute], ident: &'a Ident, named: &'a Punctuated<Field, Comma>) -> Self {$/;"	f
paged	/home/trey/code/sqlx-crud/src/traits.rs	/^    fn paged(_pool: E) -> TryCollectFut<'e, Self> {$/;"	f
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-test-0.4.2/src/task.rs	/^    fn poll(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Self::Output> {$/;"	f
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-test-0.4.2/src/task.rs	/^    pub fn poll(&mut self) -> Poll<T::Output> {$/;"	f
poll_action	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-test-0.4.2/src/io.rs	/^    fn poll_action(&mut self, cx: &mut task::Context<'_>) -> Poll<Option<Action>> {$/;"	f
poll_flush	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-test-0.4.2/src/io.rs	/^    fn poll_flush(self: Pin<&mut Self>, _cx: &mut task::Context<'_>) -> Poll<io::Result<()>> {$/;"	f
poll_next	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-test-0.4.2/src/task.rs	/^    fn poll_next(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Option<Self::Item>> {$/;"	f
poll_next	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-test-0.4.2/src/task.rs	/^    pub fn poll_next(&mut self) -> Poll<Option<T::Item>> {$/;"	f
poll_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-test-0.4.2/src/io.rs	/^    fn poll_read($/;"	f
poll_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-test-0.4.2/src/io.rs	/^    fn poll_shutdown(self: Pin<&mut Self>, _cx: &mut task::Context<'_>) -> Poll<io::Result<()>> {$/;"	f
poll_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-test-0.4.2/src/io.rs	/^    fn poll_write($/;"	f
prelude	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs	/^pub mod prelude {$/;"	m
prelude	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.5.11/src/lib.rs	/^pub mod prelude {$/;"	m
private	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/thiserror-1.0.30/src/lib.rs	/^pub mod private {$/;"	m
query	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.5.11/src/lib.rs	/^pub mod query {$/;"	m
query	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.5.11/src/macros.rs	/^macro_rules! query ($/;"	d
query_as	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.5.11/src/macros.rs	/^macro_rules! query_as ($/;"	d
query_as_unchecked	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.5.11/src/macros.rs	/^macro_rules! query_as_unchecked ($/;"	d
query_file	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.5.11/src/macros.rs	/^macro_rules! query_file ($/;"	d
query_file_as	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.5.11/src/macros.rs	/^macro_rules! query_file_as ($/;"	d
query_file_as_unchecked	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.5.11/src/macros.rs	/^macro_rules! query_file_as_unchecked ($/;"	d
query_file_scalar	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.5.11/src/macros.rs	/^macro_rules! query_file_scalar ($/;"	d
query_file_scalar_unchecked	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.5.11/src/macros.rs	/^macro_rules! query_file_scalar_unchecked ($/;"	d
query_file_unchecked	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.5.11/src/macros.rs	/^macro_rules! query_file_unchecked ($/;"	d
query_scalar	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.5.11/src/macros.rs	/^macro_rules! query_scalar ($/;"	d
query_scalar_unchecked	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.5.11/src/macros.rs	/^macro_rules! query_scalar_unchecked ($/;"	d
query_unchecked	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.5.11/src/macros.rs	/^macro_rules! query_unchecked ($/;"	d
quote_ident	/home/trey/code/sqlx-crud/sqlx-crud-macros/src/lib.rs	/^    fn quote_ident(&self, ident: &str) -> String {$/;"	f
read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-test-0.4.2/src/io.rs	/^    fn read(&mut self, dst: &mut ReadBuf<'_>) -> io::Result<()> {$/;"	f
read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-test-0.4.2/src/io.rs	/^    pub fn read(&mut self, buf: &[u8]) -> &mut Self {$/;"	f
read_error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-test-0.4.2/src/io.rs	/^    pub fn read_error(&mut self, error: io::Error) -> &mut Self {$/;"	f
remaining_wait	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-test-0.4.2/src/io.rs	/^    fn remaining_wait(&mut self) -> Option<Duration> {$/;"	f
same_type	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.5.11/src/ty_match.rs	/^pub fn same_type<T>(_1: &T, _2: &T) {}$/;"	f
select_by_id_sql	/home/trey/code/sqlx-crud/sqlx-crud-macros/src/lib.rs	/^            fn select_by_id_sql() -> &'static str {$/;"	f
select_by_id_sql	/home/trey/code/sqlx-crud/src/traits.rs	/^    fn select_by_id_sql() -> &'static str;$/;"	f
select_sql	/home/trey/code/sqlx-crud/sqlx-crud-macros/src/lib.rs	/^            fn select_sql() -> &'static str {$/;"	f
select_sql	/home/trey/code/sqlx-crud/src/traits.rs	/^    fn select_sql() -> &'static str;$/;"	f
spawn	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-test-0.4.2/src/task.rs	/^pub fn spawn<T>(task: T) -> Spawn<T> {$/;"	f
sqlx_db	/home/trey/code/sqlx-crud/sqlx-crud-macros/src/lib.rs	/^    fn sqlx_db(&self) -> TokenStream2 {$/;"	f
table_name	/home/trey/code/sqlx-crud/sqlx-crud-macros/src/lib.rs	/^            fn table_name() -> &'static str {$/;"	f
table_name	/home/trey/code/sqlx-crud/src/traits.rs	/^    fn table_name() -> &'static str;$/;"	f
test_dupe_value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.5.11/src/ty_match.rs	/^fn test_dupe_value() {$/;"	f
test_match_borrow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.5.11/src/ty_match.rs	/^fn test_match_borrow() {$/;"	f
test_wrap_same	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.5.11/src/ty_match.rs	/^fn test_wrap_same() {$/;"	f
to_raw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-test-0.4.2/src/task.rs	/^unsafe fn to_raw(waker: Arc<ThreadWaker>) -> RawWaker {$/;"	f
types	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.5.11/src/lib.rs	/^pub mod types {$/;"	m
update	/home/trey/code/sqlx-crud/src/traits.rs	/^    fn update(&'e self, pool: E) -> CrudFut<'e, Self> {$/;"	f
update_binds	/home/trey/code/sqlx-crud/sqlx-crud-macros/src/lib.rs	/^            fn update_binds($/;"	f
update_binds	/home/trey/code/sqlx-crud/src/traits.rs	/^    fn update_binds($/;"	f
update_by_id_sql	/home/trey/code/sqlx-crud/sqlx-crud-macros/src/lib.rs	/^            fn update_by_id_sql() -> &'static str {$/;"	f
update_by_id_sql	/home/trey/code/sqlx-crud/src/traits.rs	/^    fn update_by_id_sql() -> &'static str;$/;"	f
wait	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-test-0.4.2/src/io.rs	/^    pub fn wait(&mut self, duration: Duration) -> &mut Self {$/;"	f
wake	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-test-0.4.2/src/task.rs	/^    fn wake(&self) {$/;"	f
wake	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-test-0.4.2/src/task.rs	/^unsafe fn wake(raw: *const ()) {$/;"	f
wake_by_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-test-0.4.2/src/task.rs	/^unsafe fn wake_by_ref(raw: *const ()) {$/;"	f
waker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-test-0.4.2/src/task.rs	/^    fn waker(&self) -> Waker {$/;"	f
waker_ref_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-test-0.4.2/src/task.rs	/^    fn waker_ref_count(&self) -> usize {$/;"	f
waker_ref_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-test-0.4.2/src/task.rs	/^    pub fn waker_ref_count(&self) -> usize {$/;"	f
wrap_same	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.5.11/src/ty_match.rs	/^    fn wrap_same(self) -> Self::Wrapped {$/;"	f
write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-test-0.4.2/src/io.rs	/^    fn write(&mut self, mut src: &[u8]) -> io::Result<usize> {$/;"	f
write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-test-0.4.2/src/io.rs	/^    pub fn write(&mut self, buf: &[u8]) -> &mut Self {$/;"	f
write_error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-test-0.4.2/src/io.rs	/^    pub fn write_error(&mut self, error: io::Error) -> &mut Self {$/;"	f
